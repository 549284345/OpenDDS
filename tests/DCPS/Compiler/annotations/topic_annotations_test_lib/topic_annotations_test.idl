module TopicAnnotationsTest {

  /*
   * Simplest Case of a Sample Struct with no Key
   * 0 Keys
   */
  @topic
  struct UnkeyedStruct {
    long value;
  };

  /*
   * Simple Case of a Sample Struct with One Simple Key
   * 1 Key
   */
  @topic
  struct SimpleKeyStruct {
    @key long key;
    long value;
  };

  /*
   * Case of a Nested Struct Key
   * 2 Keys
   */
  @topic
  struct NestedKeyStruct {
    @key long non_nested_key;
    @key SimpleKeyStruct nested_key;
  };

  /*
   * Using a Typedef of a Struct as a Key
   * 2 Keys
   */
  typedef SimpleKeyStruct MyStructTypedef;
  @topic
  struct TypedefStructKeyStruct {
    @key long a_key_value;
    @key MyStructTypedef my_struct_typedef_key;
  };

  /*
   * Case of an Array of Primitives
   * 2 Keys
   */
  typedef long LongArray[2];
  @topic
  struct LongArrayStruct {
    @key LongArray values;
  };

  /*
   * Case of an Array of Structures
   * 2 Keys
   */
  typedef SimpleKeyStruct SimpleKeyStructArray[2];
  @topic
  struct SimpleKeyArray {
    @key SimpleKeyStructArray values;
  };

  /*
   * Case of a Unkeyed Standalone Topic Union
   * 0 Keys
   */
  @topic
  union UnkeyedUnion switch (long) {
  case 0:
    long a;
  case 5:
    char b;
  default:
    float c;
  };

  /*
   * Case of a Keyed Union
   * 1 Key
   */
  @topic
  union KeyedUnion switch (@key long) {
  case 0:
    long a;
  case 5:
    char b;
  default:
    float c;
  };

  /*
   * Case of a Keyed Union Nested inside a Struct
   * 2 Keys
   */
  @topic
  struct KeyedUnionStruct {
    @key KeyedUnion value;
    @key long another_key;
  };

  /*
   * Struct with Multidimensional Array Keys
   * 2*3 + 2*3*4 (30) Keys
   */
  typedef short A_2D_Array_t[2][3];
  typedef short A_3D_Array_t[2][3][4];
  @topic
  struct MultidimensionalArrayStruct {
    @key A_2D_Array_t array1;
    @key A_3D_Array_t array2;
  };
};
